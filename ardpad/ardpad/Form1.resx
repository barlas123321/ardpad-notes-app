<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALV3NQCzdzYEtXcyELV4MRG2eDIRtngyEbZ4MhG2eDMRtng0Ebd4NBG3eDQRtnkzEbZ5
        MhG2eTMRt3gzEbd4NBG2eDMRtngyEbV4MhG1eDMRtng0ELV5NgS2eTUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACpeUYAvXkuALt4L1e8eS7JvHkuybx5Lsm8eS/JvHkvybx5L8m8eS/JvHkvybx5
        L8m8eS/JvHkvybx5L8m8eS/JvHkvybx5L8m8eS7JvHkuybx5L8m8eS/Ju3kwVr15LgCteEAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKt6QAC/eS0AvHkufr15Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS5/vnktAK14
        QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqnk+AMB5LQC8eC5+vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Ln+9eS0Aq3VBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqeToAwHkuALx4Ln69eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXkuf755LQCocz0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKp6PADAeS4AvHgufr15
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+8eS5/EyY+B05DOhBPRDsQT0Q7EE9FPQRPRTwAAAAAAAAAAAAAAAAAqXk7AMB5
        LgC8eC5+vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/7t4LoBNRDuDUkY80VJGPM5SRjzOUUU7V1NGPABGQDsAAAAAAAAA
        AACpdzkAwHkuALx4Ln69eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/u3gugE5EO6RSRjz/UkY8/1JGPP9RRTt+VEc9AEM/
        OAAAAAAAAAAAAKt3OQC/eS4AvHgufr15Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+7eC6ATkQ7pFJGPP9SRjz/UkY8/1FF
        O35URz0AQz82AAAAAAAAAAAAq3c5AL96LgC8eC5+vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/7t4LoBORDukUkY8/1JG
        PP9SRjz/UUU7flRHPQBDPjYAAAAAAAAAAACrdzkAv3ouALx4LX69eS7/vXku4rx4Lp69eS74vXku/7x5
        LrK8eS7DvHgupL15Lty9eS7/vXku3Lx5LqW8eS7DungvcLl3MHG8eC52vXku2r15Lv+9eS7/u3cugE5E
        O6RSRjz/UkY8/1JGPP9RRTt+VEc9AEQ7NwAAAAAAAAAAAKp1OgC/ei4AvHgufr15Lv+9eS7OungvKr15
        LVy9eS1hu3guLbt5Lpe7eC9Vu3guR715LWG8eS5rvXkuubx5L5a5eS9NvXkuo715Lp27eS93vHku4L15
        Lv+7dy6ATkQ7pFJGPP9SRjz/UkY8/1FFO35URz0ARD03AAAAAAAAAAAAq3Y6AL96LgC8eC5+vXku/7x5
        Lsy7eC9BvXkusb15Lru7eS9Xu3kvlrt4L1q8eS6LvXktvLx5Lpy8eS+HvHgvk7p5L3q9eS7/vXku9bl4
        MFK8eS7NvXku/7t3L4BORDukUkY8/1JGPP9SRjz/UUU7flRHPQBEQDcAAAAAAAAAAACrdjoAv3ouALx4
        Ln69eS7/vXku0rt4L2C9eS7cvXku5rt5L3q7eS+gu3gvW7x5L629eS7pvHkvs7t4L2y7eC+SuXgwa715
        LuK8eS7XuXgwXbx5LtO9eS7/u3cugE5EO6RSRjz/UkY8/1JGPP9RRTt+VEc9AERANwAAAAAAAAAAAK14
        OgC/eS0AvHkufr15Lv+9eS77vHgvurx5LlG8eS5Ku3gvmb15LvG7eC5tu3guQb14LUu7eC9rvXku5Lx5
        L6u6eDA7vXktTLt4L1G8eC+7vXku+715Lv+7dy6ATkQ7pFJGPP9SRjz/UkY8/1FFO35URz0ARD43AAAA
        AAAAAAAArHk6AL95LQC8eS5+vXku/715Lv+9eS75vXku6r15Lum9eS71vXku/715LvG9eS7pvXgu6b15
        Lu69eS7+vXku9715Luq9eS7pvXku6r15Lvm9eS7/vXku/7p4LoBORDukUkY8/1JGPP9SRjz/UUU7flRH
        PQBEOzcAAAAAAAAAAACqeToAwHktALx4Ln69eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/u3gugE9EO6RSRjz/UkY8/1JG
        PP9RRTt+VEc9AEQ7NwAAAAAAAAAAAKp1OgDAeS0AvHgufr15Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+6eC6AT0Q8pFJG
        PP9SRjz/UkY8/1FFO35URz0ARDs3AAAAAAAAAAAAqnQ6AMB5LQC8eC5+vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/r15Lum9eS7evXku3r15Lt69eS7fvXku1rd3
        MFJPRTylUkY8/1JGPP9SRjz/UUU7flRHPQBEOzcAAAAAAAAAAACqdDoAwHktALx4Ln69eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+8eS7OungwcLx4L4q8eTCKvHkwirx5
        MIu8eTCJq3IzQVBFPLZSRjz/UkY8/1JGPP9RRTt+VEc9AEQ7NwAAAAAAAAAAAKp2OgDAeS0AvHkufr15
        Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/7x4L6a7eS+0vXku/715
        Lv69eS7+vXku/b16L51kTzpnUUY871JGPP9SRjz/UkY8/1FFO35URz0AQz42AAAAAAAAAAAAqng6AMB5
        LQC9eS5+vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/u3gvprp4
        MLy9eS7/vXku/715Lv29eS+eY086X1FGPOJSRjz/UkY8/1JGPP9SRjz/UUU7flRHPQBDPzcAAAAAAAAA
        AACqdDoAwHktAL14Ln69eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+8eC+mungwvL15Lv+9eS79vXkvnmNPOl9RRTziUkY8/1JGPP9SRjz/UkY8/1JGPP9RRTt+VEc9AEM/
        OgAAAAAAAAAAAKp1OgDAeS0AvHgufr15Lv+9eS7/vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/7x5Lqe8eS68vXku/715L55kTzpfUUU84VJGPO9SRjzlUkY85VJGPOVSRjzmUkY83FBF
        O1NSRjwAREA7AAAAAAAAAAAAqHc7AMB5LQC9eS5+vXku/715Lv+9eS7/vXku/715Lv+9eS7/vXku/715
        Lv+9eS7/vXku/715Lv+9eS7/vHkupbx5Lru9eS+hZE46X1FFPORSRjzRUEU8c1FFPJFRRTuSUUU8klJG
        PJRSRjyNUEU7OFNGPABIRD4AAAAAAAAAAACoeEAAvXkvALt5MFe8eS/OvHkvzrx5L868eS/OvXkvzL56
        L8m+ei/Jvnovyb56L8m+ei/Jvnovyb56L8O9ejFlvHowbGZQOmJRRTziUkY8/1FFO6VRRTuxUkY8/1JG
        PP5SRjz+UkY8/VFGPJ9RRjsTUUY8AAAAAAAAAAAAAAAAAAAAAACzeDgAsng6BLV5NhC2eTURtnk1Eb18
        NBBtUzg6YU05ZmFNOWVhTjllYU05ZWFNOWVhTTllX0w6YldIPFpUSDx/UUY841JGPP9SRjz/UUU7pVJF
        O7tSRjz/UkY8/1JGPP5SRjygUEU7ElFFPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA8Ni8AU0c9AFFFO3xRRjz+UUY8+1FGPPtRRjz7UUY8+1FGPPtRRjz8UkY8/FJGPP5SRjz/UkY8/1JG
        PP9RRTulUUU7u1JGPP9SRjz+UkY8qFFFPBVSRTwAIUMyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEA3LgBTRz0AUUU7flJGPP9SRjz/UkY8/1JGPP9SRjz/UkY8/1JGPP9SRjz/UkY8/1JG
        PP9SRjz/UkY8/1FFO6VSRju8UkY8/1JGPKhRRjwXUkY8AFJORAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQTgwAFNHPQBRRTt+UkY8/1JGPP9SRjz/UkY8/1JGPP9SRjz/UkY8/1JG
        PP9SRjz/UkY8/1JGPP9SRjz/UUU7pFJGO7xSRjysUUY8F1FFPABMRj0AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCOjYAUkc8AFFFO1ZRRjzJUUU8yVJFPMlRRTzJUkU8yVJF
        PMlSRTzJUUU8yVFFPMlSRTzJUkU8yVJFPMVRRTxmUkU8cFFGPBpSRjwAPD8zAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNRT4ATUU+BE5EPBBPRDsRT0M7EU9D
        OxFQRDsRUEQ7EVBEOxFQRDsRUEQ7EVBEOxFRRDwRUEU9D01FPgdQRDwGTkQ7AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4AAA/+AAAP/gAAD/4AAA/+AAAP/gAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAP/wAAH/8AAD//AAB//wAA//8AAf8=
</value>
  </data>
</root>